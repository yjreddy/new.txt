***The tool that was developed by considering the requirements of agile methodologies is Atlassian JIRA***.
In addition to the software testing, JIRA is also used as an issue tracking and project management tool.

JIRA is a popular project management and a software testing tool(User-acceptance testing and system testing) used by several testing, development, and technical support teams to complete a great deal of work quicker. Atlassian Inc., an Australian company, developed JIRA.

- JIRA is a commercial, multilingual and a platform-independent tool.
- It supports Oracle, SQL, MySQL and PostgreSQL servers in the backend.
- It is integrated with Hipchat, Bitbucket, Bamboo, Zephyr and other developing and testing tools.

JIRA is used in
- Tracking issues, bugs, and change requests.
- Support, help desk, and customer services for creating tickets, tracking the resolution and status of the tickets.
- Task tracking, project management, and requirement management.
- Workflow and process management.

Who Uses JIRA in a Project?
JIRA is used by many. Following are the professionals who use JIRA.
- Scrum Masters manage their projects and understand their team capacity.
- Developers log issues, resolve issues and create stories.
- Testers log issues and verify the issue resolutions.
- Program managers understand how effectively the issues are resolving by looking at the reports.
- Product users log bugs and feature requests.

The core features of JIRA are mentioned below.

Boards
Boards provide an immediate snapshot of the project to the team. JIRA provides Scrum and Kanban boards.

Power Search
JIRA provides a powerful search functionality with basic quick and advanced features.
JIRA supports the filter (saved search) options using JQL.

Reports
JIRA supports many reports to track progress specific timeframe, deadlines, individualâ€™s contribution, etc

Add-Ins
More than 100 add-ins are supported in JIRA to connect with different software to make work easy.

REST API
Interact with the JIRA Server applications remotely.

Workflow Customization
Provides an option to modify the workflow according to the project requirement.

Roadmap Planning
Enables the team to set a vision for the product and deliver it on time to the customer.

Advantages of JIRA
Better visibility
Better prioritization
Increased productivity
Stay connected on the go
Extensible
Usability

Following are some of the tools integrated with JIRA.

Hipchat
It is a chatting platform that allows you to discuss the project instantly, be notified of issue updates and can monitor from anywhere.

Bamboo
It seamlessly views and monitors the status of bamboo builds and deployment without leaving JIRA application projects.

Bitbucket
It is a version control repository hosting service that is web-based and used for code review. Bitbucket provides an unlimited number of private repositories.

JIRA System Requirements
The following are the system requirements needed before installing JIRA.
Browsers - Microsoft Internet Explorer (Windows), Microsoft Edge, Mozilla Firefox (all platforms), Google Chrome (Windows and Mac), Safari (Mac), and Mobile Safari (iOS)
Java Platforms - Oracle JDK/JRE 1.8
Operating System - Microsoft Windows and Linux
Application Server
Databases - Oracle, MySQL, PostgreSQL, Microsoft SQL Server, HyperSQL (inbuilt with JIRA)

JIRA Project
A JIRA project is a collection of issues. Teams use the project to
- Coordinate the development of a product
- Track a project
- Manage a help desk and many more.
A JIRA project can be configured and then customized to suits the need of the user and the team.

User Management in JIRA
A user is the one who can access the JIRA application.
User management helps you to
- Create, edit and remove a user
- Assign users to groups, project roles, and applications
- Monitor a users activity
- Prevent automatic login
- Manage password policy

Project Roles in JIRA
Project roles are a flexible way to associate users and groups with a particular project. The default roles in JIRA are
- Administrators
- Developers
- Users
To create a project role:
- Click the cog icon present on the top right corner.
- Select System > Roles (under security menu)
- Enter the Project Name and Description in the text boxes, and click on Add Project Role.

Managing Project Roles in JIRA
JIRA allows you to add particular people to the specific roles in the project. This can be done by
- Clicking the cog icon available on the top right corner.
- Choose Projects from the dropdown list.
- Choose the project to which you wish to add the users to the specific roles.
- Choose Roles in the left menu.
- Hover over the Users column for the project role that you want to add.
- Click Add Users button.
- Type the name of the user and click Update.
You can also add groups to the specific roles using the above procedure

Components
Components are the subsections of a project. They are the generic containers for issues.
- Used to classify the issues in a project into smaller groups.
- Managed by only by the project admins and JIRA admins.
Components add structure to the projects by breaking them into teams, features, modules, sub-projects and many more.
You can also generate the reports and collect statistics using components.

Versions
Versions is the point-in-time for a project.
They help you
- Organize the work by giving milestones to aim for
- Schedule and organize the releases.
After creating a version and assigning issues to it, you can use it to filter the information in many reports.
You can also assign the issues in the project to a specific version, and build up the needed work to complete the version.

Archiving a Project
Archiving a project helps you to preserve the data of the project that is deleted from the JIRA instance, for future auditing purpose.
A project can be archived in two ways.
- Online archiving
With online archiving, you can hide the project or make it read-only.
- Offline archiving
With offline archiving, you have an option to restore the deleted project.
You will be learning about the issues in a project in the next section.

Issue Fields
The following are some of the important fields of an issue.
Issue type:
JIRA is used to track the issues of different types.
Bug, Improvement, New Feature, Task, and Custom Issue are some of the default issue types present in JIRA.
Priority:
Defines the importance in relation to other issues.
Highest, High, Medium, Low, and Lowest are some of the default priorities present in JIRA.
Assignee:
The person under whose name the issue is currently assigned.
Reporter:
A person who has entered the issue into the system.
Due Date:
Date by which the issue is scheduled to be completed.
Time tracking:
It shows
The Original estimate of the time required to complete an issue.
The Remaining estimate of the time required to resolve an issue.

Issue Types
Since JIRA handles a lot of tasks, many types of issues are present to identify the work and categorize the issue.
The following are some of the issue types present in JIRA.
Bug:
An issue that prevents the function of the product.
Epic:
A big user story that requires to be broken down.
New Feature:
A new feature of the product that needs to be developed.
Task:
A task that needs to be completed to achieve the team's goal.
Improvement:
An improvement to the existing task.

Editing an Issue
Edit Issue project permission is required for the issues relevant project to edit an issue.
An issue can be edited by:
Clicking on the Issues button in the header menu.
Select the My Open Issues.
Select the issue to be edited.
Click Edit button.
Commenting on an issue:
You can add a comment while working with an issue. Comment option is available at the bottom of the issue screen under the Activity section.
If you want to mention any user in the comment, you need to use @ symbol followed by the user's name

Cloning, Linking, and Moving an Issue
Cloning an issue
Cloning an issue lets you to quickly create a duplicate of that issue within the same project.
Linking an Issue
Linking an issue allows you to create a connection between two existing issues. Two issues can either be on the same server or the different servers of JIRA.
Moving an Issue
Moving an issue helps you to move an issue from one project to the other

Documenting the Work Done on an Issue
Once the issue is opened, you see a Time Tracking option on the bottom right of the view issue screen. This shows the original, remaining and the logged time of an issue.
Enter the time spent on the issue by clicking More button and selecting Log Work.
You need to specify the time tracking details using W, D, H and M that specifies the week, days, hours, and minutes
You can modify the status of the work by clicking the current status of the workflow which is shown on the top, and click on Update. The issue status gets reflected immediately.


Security Controls on Issue
Setting the security level on an issue restricts the access of that issue only to people who are the members of the chosen security level.
You can set the security levels by:
Adding a Security Scheme
Adding a Security Level
Adding Users or Groups to the security level
Associating security scheme to the project

Adding a Security Scheme, Security Level and members:
Go to the Administrators menu (cog icon) and click Issues.
Scroll down to the bottom and select Issue Security Schemes.
Click Add Issue Security Scheme
Fill in the requested details and click Add
Once the security scheme is added, you find the Security Levels under the Operations column to add a security level.
Add the members to the security level by clicking the Add button under the Operations column.
Associating the Security Scheme to the project:
Select the project.
Choose the Issue Security from the left menu.
Click Actions > Select a Scheme.

Importing Issues Using a CSV file:
You will be able to create issues in bulk using a Comma-Separated Value File (CSV).

First, you need to create a CSV file with the issue fields.

CSV file structure

Summary, Description, Status
"Login fails", "This is on a new line", Open

CSV file can be uploaded in two ways.

By selecting the Issues drop-down menu from the system dashboard and choosing Import Issues from CSV.

Go to the System Administration menu > Import/Export section > External System Import > Import from Comma-Separated Values (CSV).

Integration of Issues to bitbucket
By integrating JIRA issues with bitbucket, you can
Automatically link code to JIRA.
Automatically link issues and keep your team up to date.
Get context on the work and the team without switching the applications.
Evaluate the status of a JIRA issue development at a glance.

Introduction to Workflows:
A team has a certain business process that it follows for taking work item, bug or an idea from beginning to end. Workflow represents that process. The work item has definite states that represent the process status at a given point of time.
For example, Open, In Progress, Resolved, Reopened and Closed represent the states of the Workflow. To proceed from one status to another status, work item moves along a transition.
If the transitions are applied with conditions, only a team member with certain roles or if they include a comment, or if they have approval, can only execute them.
In JIRA, Workflow tracks the lifecycle of an issue.
A JIRA workflow is a combination of statuses and transitions that an issue moves through during its lifecycle. It typically represents the processes within an organization. There are some default workflows present in JIRA. These can be copied and edited according to your requirement.

Statuses And Transitions
Statuses:
Status indicates the state of an issue at a particular point in the workflow.
An issue can be in only one status at a given point in time.
You have an option to specify the properties for the statuses.
Transitions:
A transition is a link between two statuses that allows an issue to move one status to another.
It is a one-way link. So if you want to move the status back and forth, you need to create two transitions.

Active and Inactive Workflows
Inactive Workflow:
The workflow that is currently not used by any projects is known as Inactive workflow.
Workflow steps and transitions can be edited directly, as no current issues will be transitioning through an inactive workflow.
Active Workflow:
The workflow that is currently used by one or more projects is known as Active workflow.
To edit an active workflow, JIRA first creates a draft of it, that you can then modify as you see fit and finally publish the draft.

Custom Event:
A custom event is used to generate an email notification from a particular workflow transition post function.

Configuring a notification for a custom event by
Adding the custom event to the system.
Configuring the notification scheme to send an email when the custom event is fired.
Configuring the workflow transition post function to fire the custom event.

Validators in JIRA Workflow:
A validator checks whether the certain input to the transition is valid, before performing the transition.

Configuring Validators in JIRA Workflow

Just like the post function, you need to select the transition that needs to be validated.
Click Add Validator.
Select the validator and click Add.
Select Permission on the add parameters to validators page and click Add.

Roadmaps:
A roadmap is a strategy or a high-level plan visualized on a timeline. Roadmaps are about vision, overview, priorities, highlight, shared understanding, expectations, etc.
Product owners use roadmaps to estimate the future product functionality and when new features will be released.
A roadmap consists of:
A timeline with the project divided into stages
High-level tasks
Workstreams
Project goals
Risks
Dependencies
Key Events.

JIRA Boards:
A board displays the issues from one or more projects. It gives a flexible way of managing, viewing, and reporting the progressing work.
A single project can have multiple boards or a combination of Scrum and Kanban boards.
Two popular boards present in JIRA are
Scrum board and
Kanban board.

Scrum Board:
A Scrum board was created using the Scrum framework. A Scrum Board is a tool that helps Teams make Sprint Backlog items visible. The board can take many physical and virtual forms but it performs the same function regardless of how it looks. The board is updated by the Team and shows all items that need to be completed for the current Sprint.
The backlog of a Scrum board shows the issues for your project grouped into a backlog and sprints. In the Scrum backlog, you can create and update issues, drag and drop issues to rank them, or assign them to sprints, epics, or versions, manage epics, and more.
Scrum boards have
Plan mode: Includes moving an issue from backlogs and giving a time estimate for each issue.
Active sprint mode: Allows you to move the issues across the statuses.

Kanban Board:
Kanban, in contrast to the Scrum board, permits users to begin work without any structured plan and does not even have a planning mode.
The same column-based interface is used as Scrum active sprint for tracking the task status, without the ability to organize sprints.
Instead of dealing with a portion of issues in a project, the Kanban board deals with all the issues.

JIRA Dashboard:
JIRA Dashboard is the main display that you see after logging into JIRA.
JIRA Dashboard helps
To organize your projects, assignments, and achievements in different charts.
The team to monitor the status of the project live on TVs around the workspace.
A sample dashboard is shown in the above image.

Creating a JIRA Dashboard:
You can create and customize the dashboard to display the information you need.
Creating a Dashboard.
Click the Dashboards > Manage Dashboards > Create New Dashboard.
Name your dashboard and give the description so that your team knows when to use.
Fill the remaining fields and click Add.

Dashboard Gadgets:
Gadgets allows you to customize an information that appears on the Dashboard in JIRA applications. Once the dashboard is created, you can set the layout and add the required gadgets to the dashboard. You also have the filters option to increase the visibility of the results on the gadget.
The following are some of the gadgets present in JIRA.
Activity Stream: Displays all the activities done in your instance.
Assigned to me: Shows all the unresolved issues assigned to you.
Average age chart: Tells you the average age of the unresolved problems.
Two-dimensional filter statistics by assignee: Displays the data based on a specified issue filter.
Filter results: Shows the issues of the specified issue filter

Generating a JIRA Report:
JIRA provides reports that will show statistics for projects, versions, users and other issue fields. Reports can be accessed directly from the project overview summary.
It helps you to track and analyze the teamwork throughout the project. JIRA provides various reports of different categories like Agile, Issue analysis, Forecast, and management, etc.
Following are some of the reports available in JIRA.
Burndown report
Sprint report
Time tracking report
Version workload report
Recently created issues report

Getting JIRA Report from Market Place:
In addition to reports offered by JIRA, you can also add the report to JIRA from the Atlassian Marketplace where you find the add-on that provides you with the additional reporting functionality.
Adding Reports to JIRA from Atlassian Marketplace:
Type marketplace.atlassian.com in the browser.
Select the add-on and download the JAR file.
Select Add-ons from the administration section of JIRA.
Click the manage add-ons from the left-hand panel.
Click Upload add-on and click continue to add the report.


Intro to Test Management:
Many teams are utilizing JIRA for test case management so that the development and testing can stay in one system.
How to set up JIRA for test case management?
Separate test case functionality is not present in JIRA. You need to integrate with another testing tool to perform testing. One of the tools that you can integrate with JIRA is Zephyr.

Zephyr Add-On in JIRA:
Zephyr in JIRA is a native application that comes with JIRA. It brings the quality test management capabilities to JIRA project.
Features of Zephyr
Provides the testing functionality within JIRA.
Track quality metrics.
When Zephyr is integrated with JIRA, you can
Write, modify and view test cases
Create test cycles
Add test cases to test cycles
Assign the test executions
Execute the test cycles
View the test process

Test sessions helps you to carry out more than one test in a single session. They give detail information on who, how, when and why the test was done.
Test sessions are useful for
Planning
Executing
Tracking manual testing.


